{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\letru\\\\OneDrive\\\\Documents\\\\Dai Hoc\\\\JavaFullstack\\\\react\\\\react-lucky-draw-master\\\\src\\\\components\\\\Tab\\\\ItemForm\\\\ItemForm.jsx\",\n    _s = $RefreshSig$();\n\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"./ItemForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ItemForm(props) {\n  _s();\n\n  // Declare a new state variable, which we'll call \"count\"\n  const [value, setValue] = useState(props.items);\n\n  function handleChange(e) {\n    const newValue = e.target.value.split(\"\\n\");\n    setValue(newValue);\n  } // use Fisher–Yates Shuffle algorithm: https://bost.ocks.org/mike/shuffle/\n\n\n  function Shuffle() {\n    var array = JSON.parse(localStorage.getItem(\"itemsList\"));\n    let currentIndex = JSON.parse(localStorage.getItem(\"itemsList\")).length,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--; // And swap it with the current element.\n\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    setValue(array);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" d-flex  flex-column  flex-sm-column  flex-md-column  flex-lg-row  justify-content-lg-start  \",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"shuffleButton\",\n        className: \" btn btn-primary flex-lg-grow-1  me-lg-2 mb-md-2  mb-sm-2  mb-lg-0 mb-2 \",\n        variant: \"light\",\n        onClick: Shuffle,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-shuffle me-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), \"Shuffle\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"removeButton\",\n        className: \"btn btn-primary flex-lg-grow-1\",\n        variant: \"light\",\n        onClick: RemoveDuplicate,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"bi bi-trash me-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), \"Remove duplicate\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      placeholder: \"Search...\",\n      data: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"inputTextArea\",\n      className: \"form-control w-100 mt-2 p-10\",\n      value: value === null || value === void 0 ? void 0 : value.join(\"\\n\"),\n      onChange: handleChange,\n      rows: 17,\n      cols: 15\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"updateButton\",\n      className: \"btn btn-primary disableElement w-100 mt-2\",\n      onClick: () => {\n        props.onClick(value.filter(e => e));\n      },\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ItemForm, \"7rxfn0heHNMd9moYWA6GxrlqQ1Y=\");\n\n_c = ItemForm;\nexport default ItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemForm\");","map":{"version":3,"sources":["C:/Users/letru/OneDrive/Documents/Dai Hoc/JavaFullstack/react/react-lucky-draw-master/src/components/Tab/ItemForm/ItemForm.jsx"],"names":["SearchBar","useState","Button","ItemForm","props","value","setValue","items","handleChange","e","newValue","target","split","Shuffle","array","JSON","parse","localStorage","getItem","currentIndex","length","randomIndex","Math","floor","random","RemoveDuplicate","join","onClick","filter"],"mappings":"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","sourcesContent":["import SearchBar from \"../SearchBar/SearchBar\";\nimport { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"./ItemForm.css\";\n\nfunction ItemForm(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  const [value, setValue] = useState(props.items);\n\n  function handleChange(e) {\n    const newValue = e.target.value.split(\"\\n\");\n    setValue(newValue);\n  }\n\n  // use Fisher–Yates Shuffle algorithm: https://bost.ocks.org/mike/shuffle/\n  function Shuffle() {\n    var array = JSON.parse(localStorage.getItem(\"itemsList\"));\n    let currentIndex = JSON.parse(localStorage.getItem(\"itemsList\")).length,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex],\n        array[currentIndex],\n      ];\n    }\n    setValue(array);\n  }\n\n\n  return (\n    <div className=\"mt-10\">\n      <div\n        className=\"\n      d-flex \n      flex-column \n      flex-sm-column \n      flex-md-column \n      flex-lg-row \n      justify-content-lg-start \n     \"\n      >\n        <button\n          id=\"shuffleButton\"\n          className=\"\n          btn btn-primary\n          flex-lg-grow-1 \n          me-lg-2\n          mb-md-2 \n          mb-sm-2 \n          mb-lg-0\n          mb-2\n          \"\n          variant=\"light\"\n          onClick={Shuffle}\n        >\n          <i className=\"bi bi-shuffle me-3\"></i>Shuffle\n        </button>\n        <button\n          id=\"removeButton\"\n          className=\"btn btn-primary flex-lg-grow-1\"\n          variant=\"light\"\n          onClick={RemoveDuplicate}\n        >\n          <i class=\"bi bi-trash me-3\"></i>\n          Remove duplicate\n        </button>\n      </div>\n      <SearchBar placeholder=\"Search...\" data={value} />\n      <textarea\n        id=\"inputTextArea\"\n        className=\"form-control w-100 mt-2 p-10\"\n        value={value?.join(\"\\n\")}\n        onChange={handleChange}\n        rows={17}\n        cols={15}\n      ></textarea>\n      <button\n        id=\"updateButton\"\n        className=\"btn btn-primary disableElement w-100 mt-2\"\n        onClick={() => {\n          props.onClick(value.filter((e) => e));\n        }}\n      >\n        Update\n      </button>\n    </div>\n  );\n}\n\nexport default ItemForm;\n"]},"metadata":{},"sourceType":"module"}