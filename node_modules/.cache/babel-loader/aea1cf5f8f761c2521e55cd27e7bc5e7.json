{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\letru\\\\OneDrive\\\\Documents\\\\Dai Hoc\\\\JavaFullstack\\\\react\\\\react-lucky-draw-master\\\\src\\\\components\\\\Wheel\\\\index.js\";\nimport React from \"react\";\nimport \"./index.css\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Wheel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItem: null\n    };\n    this.selectItem = this.selectItem.bind(this);\n  }\n\n  selectItem() {\n    if (this.props.items.length === 0 || this.props.spinning === true) {\n      console.log(\"Can't spin a empty wheel or spinning wheel\");\n      return;\n    }\n\n    if (this.state.selectedItem === null) {\n      const selectedItem = Math.floor(Math.random() * this.props.items.length);\n      this.props.onChange(selectedItem);\n\n      if (this.props.onSelectItem) {\n        this.props.onSelectItem(selectedItem);\n      }\n\n      this.setState({\n        selectedItem\n      });\n    } else {\n      this.setState({\n        selectedItem: null\n      });\n      setTimeout(this.selectItem, 500);\n    }\n  }\n\n  render() {\n    const {\n      selectedItem\n    } = this.state;\n    const {\n      items\n    } = this.props;\n    const wheelVars = {\n      \"--nb-item\": items.length,\n      \"--selected-item\": selectedItem\n    };\n    const spinning = selectedItem !== null ? \"spinning\" : \"\";\n    let spinDuration = localStorage.getItem(\"duration\");\n    let cssProperties = {};\n    cssProperties[\"--spinning-duration\"] = `${spinDuration}s`;\n    cssProperties[\"--wheel-color\"] = `${this.props.wheelColor}`;\n    cssProperties[\"--neutral-color\"] = `${this.props.fontColor}`;\n    if (cssProperties[\"--wheel-color\"] === \"null\") cssProperties[\"--wheel-color\"] = \"#d38c12\";\n    if (cssProperties[\"--neutral-color\"] === \"null\") cssProperties[\"--neutral-color\"] = \"#FFFFFF\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: cssProperties,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Click to spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wheel-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          lg: true,\n          className: `wheel ${spinning}`,\n          style: wheelVars,\n          onClick: this.selectItem,\n          children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wheel-item\",\n            style: {\n              \"--item-nb\": index\n            },\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Define prop types\n\nWheel.propTypes = {\n  items: PropTypes.array.isRequired\n}; // Define default prop values\n\nWheel.defaultProps = {\n  items: [\"Ali\", \"Beatriz\", \"Charles\", \"Diya\", \"Eric\", \"Fatima\", \"Gabriel\", \"Hanna\"]\n};","map":{"version":3,"sources":["C:/Users/letru/OneDrive/Documents/Dai Hoc/JavaFullstack/react/react-lucky-draw-master/src/components/Wheel/index.js"],"names":["React","PropTypes","Wheel","Component","constructor","props","state","selectedItem","selectItem","bind","items","length","spinning","console","log","Math","floor","random","onChange","onSelectItem","setState","setTimeout","render","wheelVars","spinDuration","localStorage","getItem","cssProperties","wheelColor","fontColor","map","item","index","propTypes","array","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\nimport PropTypes from \"prop-types\";\n\nexport default class Wheel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItem: null,\n    };\n    this.selectItem = this.selectItem.bind(this);\n  }\n\n  selectItem() {\n    if (this.props.items.length === 0 || this.props.spinning === true) {\n      console.log(\"Can't spin a empty wheel or spinning wheel\");\n      return;\n    }\n    if (this.state.selectedItem === null) {\n      const selectedItem = Math.floor(Math.random() * this.props.items.length);\n      this.props.onChange(selectedItem);\n      if (this.props.onSelectItem) {\n        this.props.onSelectItem(selectedItem);\n      }\n      this.setState({ selectedItem });\n    } else {\n      this.setState({ selectedItem: null });\n      setTimeout(this.selectItem, 500);\n    }\n  }\n\n  render() {\n    const { selectedItem } = this.state;\n    const { items } = this.props;\n\n    const wheelVars = {\n      \"--nb-item\": items.length,\n      \"--selected-item\": selectedItem,\n    };\n    const spinning = selectedItem !== null ? \"spinning\" : \"\";\n    let spinDuration = localStorage.getItem(\"duration\");\n\n    let cssProperties = {};\n\n    cssProperties[\"--spinning-duration\"] = `${spinDuration}s`;\n    cssProperties[\"--wheel-color\"] = `${this.props.wheelColor}`;\n    cssProperties[\"--neutral-color\"] = `${this.props.fontColor}`;\n\n    if (cssProperties[\"--wheel-color\"] === \"null\")\n      cssProperties[\"--wheel-color\"] = \"#d38c12\";\n\n    if (cssProperties[\"--neutral-color\"] === \"null\")\n      cssProperties[\"--neutral-color\"] = \"#FFFFFF\";\n\n    return (\n      <div style={cssProperties}>\n        <h1 className=\"text-center\">Click to spin</h1>\n        <div className=\"wheel-container\">\n          <div\n            lg={true}\n            className={`wheel ${spinning}`}\n            style={wheelVars}\n            onClick={this.selectItem}\n          >\n            {items.map((item, index) => (\n              <div\n                className=\"wheel-item\"\n                key={index}\n                style={{ \"--item-nb\": index }}\n              >\n                {item}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Define prop types\nWheel.propTypes = { items: PropTypes.array.isRequired };\n\n// Define default prop values\nWheel.defaultProps = {\n  items: [\n    \"Ali\",\n    \"Beatriz\",\n    \"Charles\",\n    \"Diya\",\n    \"Eric\",\n    \"Fatima\",\n    \"Gabriel\",\n    \"Hanna\",\n  ],\n};\n"]},"metadata":{},"sourceType":"module"}